declare type MapDataLine = {
    nameRU: string;
    nameEn: string;
    fileName: string;
    normallisedFileName: string;
    apiName: string;
    hasPreview: boolean;
    regions: string;
    types: string;
    apps: string;
    isInShortSet: string;
};
declare const indexPageUrlRu: string;
declare const indexPageUrlEn: string;
declare const russianPagesPostfix: string;
declare const englishPagesPostfix: string;
declare const contactsPageUrlRu: string;
declare const contactsPageUrlEn: string;
declare function redirectToIndexPage(): void;
declare function redirectToContactsPage(): void;
declare function redirectToPageWithAnotherLanguage(): void;
declare let isInDownloadingMode: boolean;
declare const regularModeHeaderID = "regularModeHeader";
declare const downloadingHeaderID = "downloadModeHeader";
declare const regularModeButtonID = "downloadMenuListBtn";
declare const downloadingModeButtonID = "downloadMenuBackBtn";
declare const rubricatorID = "rubricator";
declare function changeMenuMode(): void;
declare function showCorrectUiForCurrentMode(): void;
declare const defaultSelectorValue = 0;
declare const countrySelectID = "mapCountrySelector";
declare const categorySelectID = "mapCategorySelector";
declare const appSelectID = "mapAppSelector";
declare function resetAllSelectElements(): void;
declare function setSelectElementWith(value: number, id: string): void;
declare function setAppTypeFromUrlParams(): void;
declare function getFavoriteModeFromUrlParams(): boolean;
declare const defaultValue = "All";
declare const globalCoverageValue = "World";
declare let currentRegion: string;
declare let currentType: string;
declare let currentApp: string;
declare function changeRegion(newValue: string): void;
declare function changeType(newValue: string): void;
declare function changeApp(newValue: string): void;
declare const allCountriesValue = "World";
declare const replacingDivClass = "replacing_div";
declare let downloadedMapList: MapDataLine[];
declare function updateMapList(): void;
declare function generateMapListHtml(mapListItems: MapDataLine[]): void;
declare function getDownloadUrlTemplate(app: string): string;
declare function getPrewiewHtmlBlock(hasPrewiew: boolean): string;
declare const mapLineTemplate = "\n<br>\n\n<div class=\"mapLine\">\n    \n    {previewBlock}\n    \n    <a class=\"mapLineLink\"\n        href=\"{singleMapDownloadUrl}\"\n        title=\"{downloadMessage}\">\n        {mapName}\n    </a>\n</div>\n\n    ";
declare function downloadMapList(): MapDataLine[];
declare function getCurrentURL(): string;
declare function getQueryVariable(variable: string): string;
declare function replaceElementContent(elementClass: string, newContent: string): void;
declare function redirectTo(url: string): void;
declare function isContains(sourceText: string, checkingText: string): boolean;
declare function setDivVisiability(className: string, isVisible: boolean): void;
//# sourceMappingURL=AGScripts.d.ts.map